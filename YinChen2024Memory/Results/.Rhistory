qnorm(0.2)
qnorm(0.6)
qnorm(0.6) - qnorm(0.2)
pnorm(-0.84)
pnorm(-0.2)
pnorm(-0.6)
qnorm(0.42)
qnorm(0.27)
qnorm(0.28)
pnorm(0.6)
qnorm(0.73)
qnorm(0.72)
install.packages(c("ggsci", "marginaleffects", "MASS", "xfun"))
qnorm(0.6) - qnorm(0.2)
install.packages(c("bookdown", "cli", "crayon", "digest", "effectsize", "emmeans", "fields", "foreign", "ggpmisc", "ggpp", "lhs", "lme4", "locfit", "loo", "nloptr", "parameters", "pbkrtest", "pkgload", "posterior", "prodlim", "ps", "psych", "recipes", "roxygen2", "SparseM"))
install.packages(c("collapse", "datawizard", "knitr", "pkgdown", "QuickJSR", "RcppArmadillo", "RcppParallel", "RCurl", "reprex", "yaml"))
install.packages(c("shiny", "withr"))
install.packages("Rdpack")
install.packages("Rdpack", type="source")
install.packages(c("foreign", "MASS", "nlme", "survival"))
install.packages("nlme")
install.packages("nlme", type="source")
install.packages("nlme", type = "source")
install.packages("RcppEigen")
install.packages("RcppEigen", type="source")
install.packages(c("corrplot", "digest", "expm", "gert", "insight", "minqa", "mvtnorm", "OpenMx", "openssl", "RcppParallel", "rjags", "rmarkdown", "sfsmisc", "V8", "xfun"))
?plot_power
setwd("~/Dropbox/2017Experiment/speGoNogo/speVCS2/YinChen2024Memory/Results/")
pacman::p_load(tidyverse, psych, knitr, rstatix, ggpubr, Superpower)
options(dplyr.summarise.inform=FALSE) # suppress warning in regards to regrouping
install.packages(c("BiocManager", "emmeans"))
install.packages("emmeans")
install.packages("emmeans", type="source")
install.packages("emmeans", type = "source")
?plot_power
wrap <- function(data, bound = 180) {
((data + bound) %% (bound * 2)) - bound
}
# 실험 1 & 2
d1 <- read.csv('E1results.csv', header = T) %>%
mutate(error = ifelse(Lshape==Label,
probeAngle - angle1,
probeAngle - angle2),
error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 100) %>%
select(subject, Label, error, absError)
d2 <- read.csv('E2results.csv', header = T) %>%
mutate(error = ifelse(Lshape==Label,
probeAngle - angle1,
probeAngle - angle2),
error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 200) %>%
select(subject, Label, error, absError)
# 실험 3
d3 <- read.csv('E3results.csv', header = T) %>%
mutate(error = ifelse(Loc1==Label, probeAngle - angle1,
ifelse(Loc2==Label, probeAngle - angle2,
probeAngle - angle3)),
error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 300) %>%
filter(ISI == 1.6) %>%
select(subject, Label, error, absError)
# 실험 4
d4 <- read.csv('E4results.csv', header = T) %>%
mutate(error = ifelse(loc1==Label,
probeAngle - angle1,
probeAngle - angle2),
error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 400) %>%
filter(suffix == 5) %>%
select(subject, Label, error, absError)
d <- bind_rows(list(d1, d2, d3, d4))
hist(d$error)
range(d$error)
headTail(d)
ds <- d %>% group_by(subject, Label) %>%
summarise(absoluteError = mean(absError)) %>%
ungroup()
d
library(mixtur)
?get_summary_statistics
d %>% filter(subject < 200) %>%
droplevels()
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(targ = 0)
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0) %>%
get_summary_statistics(unit = "degrees",
id_var = "subject",
reponse_var = "error",
target_var = "target",
set_size_var = "Label")
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0) %>%
get_summary_statistics(unit = "degrees",
id_var = "subject",
response_var = "error",
target_var = "target",
set_size_var = "Label")
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0,
id = subject) %>%
get_summary_statistics(unit = "degrees",
id_var = "id",
response_var = "error",
target_var = "target",
set_size_var = "Label")
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0,
id = subject) %>%
get_summary_statistics(unit = "degrees",
id_var = "id",
response_var = "error",
target_var = "target",
set_size_var = "Label") %>%
group_by(id, set_size) %>%
summarise(M = mean(precision))
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0,
id = subject) %>%
get_summary_statistics(unit = "degrees",
id_var = "id",
response_var = "error",
target_var = "target",
set_size_var = "Label") %>%
group_by(id, set_size) %>%
summarise(M = mean(precision)) %>%
ungroup() %>%
group_by(set_size) %>%
get_summary_stats(precision, type="common")
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0,
id = subject) %>%
get_summary_statistics(unit = "degrees",
id_var = "id",
response_var = "error",
target_var = "target",
set_size_var = "Label") %>%
group_by(id, set_size) %>%
summarise(M = mean(precision)) %>%
ungroup() %>%
group_by(set_size) %>%
get_summary_stats(M, type="common")
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0,
id = subject) %>%
get_summary_statistics(unit = "degrees",
id_var = "id",
response_var = "error",
target_var = "target",
set_size_var = "Label") %>%
group_by(id, set_size) %>%
summarise(M = mean(precision)) %>%
ungroup()
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0,
id = subject) %>%
get_summary_statistics(unit = "degrees",
id_var = "id",
response_var = "error",
target_var = "target",
set_size_var = "Label") %>%
group_by(id, set_size) %>%
summarise(M = mean(precision)) %>%
ungroup() %>%
mutate(Label = set_size) %>%
group_by(Label) %>%
get_summary_stats(M, type="common")
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0,
id = subject) %>%
get_summary_statistics(unit = "degrees",
id_var = "id",
response_var = "error",
target_var = "target",
set_size_var = "Label") %>%
group_by(id, set_size) %>%
summarise(Precision = mean(precision)) %>%
ungroup() %>%
mutate(Label = set_size) %>%
group_by(Label) %>%
get_summary_stats(Precision, type="common")
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0,
id = subject) %>%
get_summary_statistics(unit = "degrees",
id_var = "id",
response_var = "error",
target_var = "target",
set_size_var = "Label")
d %>% filter(subject < 200) %>%
droplevels() %>%
mutate(target = 0,
id = subject) %>%
get_summary_statistics(unit = "degrees",
id_var = "id",
response_var = "error",
target_var = "target",
set_size_var = "Label") %>%
group_by(id, set_size) %>%
summarise(Precision = mean(precision)) %>%
ungroup() %>%
mutate(Label = set_size) %>%
group_by(Label) %>%
get_summary_stats(Precision, type="common")
hist(d$error)
wrap <- function(data, bound = 180) {
((data + bound) %% (bound * 2)) - bound
}
wrap(180)
wrap(-180)
wrap(181)
wrap(1)
wrap(0)
d1 <- read.csv('E1results.csv', header = T) %>%
mutate(error = ifelse(Lshape==Label,
probeAngle - angle1,
probeAngle - angle2),
# error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 100) %>%
select(subject, Label, error, absError)
d1
head(d1)
tail(d1)
range(d1$error)
90/90*pi
180/90*pi
wrap <- function(data, bound = 180) {
((data + bound) %% (bound * 2)) - bound
}
wrap(0)
wrap(c(-1,0,1,179,180,181))
wrap(c(-180,-179,-1,0,1,179,180,181))
wrap(c(-181,-180,-179,-1,0,1,179,180,181))
wrap <- function(data, bound = 90) {
((data + bound) %% (bound * 2)) - bound
}
wrap(c(-181,-180,-179,-1,0,1,179,180,181))
wrap(c(-181,-180,-179,-91,-90,-89,-1,0,1,89,90,91179,180,181))
wrap(c(-91,-90,-89,-1,0,1,89,90,91))
wrap <- function(data, bound = 90) {
((data + bound) %% (bound * 2)) - bound
}
# 실험 1 & 2
d1 <- read.csv('E1results.csv', header = T) %>%
mutate(error = ifelse(Lshape==Label,
probeAngle - angle1,
probeAngle - angle2),
# error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 100) %>%
select(subject, Label, error, absError)
head(d1)
tail(d1)
range(d1$error)
d1 <- read.csv('E1results.csv', header = T) %>%
mutate(error = ifelse(Lshape==Label,
probeAngle - angle1,
probeAngle - angle2),
error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 100) %>%
select(subject, Label, error, absError)
head(d1)
tail(d1)
range(d1$error)
d2 <- read.csv('E2results.csv', header = T) %>%
mutate(error = ifelse(Lshape==Label,
probeAngle - angle1,
probeAngle - angle2),
error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 200) %>%
select(subject, Label, error, absError)
# 실험 3
d3 <- read.csv('E3results.csv', header = T) %>%
mutate(error = ifelse(Loc1==Label, probeAngle - angle1,
ifelse(Loc2==Label, probeAngle - angle2,
probeAngle - angle3)),
error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 300) %>%
filter(ISI == 1.6) %>%
select(subject, Label, error, absError)
# 실험 4
d4 <- read.csv('E4results.csv', header = T) %>%
mutate(error = ifelse(loc1==Label,
probeAngle - angle1,
probeAngle - angle2),
error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 400) %>%
filter(suffix == 5) %>%
select(subject, Label, error, absError)
d <- bind_rows(list(d1, d2, d3, d4))
hist(d$error)
range(d$error)
headTail(d)
table(d$Label, d$subject)
ds <- d %>% group_by(subject, Label) %>%
summarise(absoluteError = mean(absError)) %>%
ungroup()
ds %>% group_by(Label) %>%
get_summary_stats(absoluteError, type="common")
ds %>% ggboxplot(x = "Label", y = "absoluteError", add = "point")
res.aov <- anova_test(data = ds, dv = absoluteError, wid = subject, within = Label)
get_anova_table(res.aov)
pwc <- ds %>%
pairwise_t_test(
absoluteError ~ Label, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc
ds %>% filter(Label != 'Stranger') %>%
droplevels() %>%
pairwise_t_test(absoluteError ~ Label, paired = TRUE) %>%
kable(digits = 4, format = "simple", caption = "Paired t-test")
ds %>% filter(Label != 'Stranger') %>%
droplevels() %>%
cohens_d(absoluteError ~ Label, paired = TRUE)
ds.sum <- ds %>% filter(Label != 'Stranger') %>%
droplevels() %>%
group_by(Label) %>%
get_summary_stats(absoluteError, type="common")
ds.corr <- ds %>% filter(Label != 'Stranger') %>%
droplevels() %>%
pivot_wider(id_cols = subject, names_from = Label, values_from = absoluteError) %>%
cor_test(vars = Self, vars2 = Friend)
ds.corr$cor
design_result <- ANOVA_design(design = "2w", n = 27,
labelnames = c("LABEL","self","other"),
mu = ds.sum$mean,
sd = ds.sum$sd,
r = ds.corr$cor)
p_a <- plot_power(design_result,
max_n = 100,
desired_power = 90,
plot = TRUE,
verbose = TRUE)
(2.46+3.35)/2
setwd("~/Dropbox/2017Experiment/speGoNogo/speVCS2/YinChen2024Memory/Results/")
pacman::p_load(tidyverse, psych, knitr, rstatix, ggpubr, Superpower)
options(dplyr.summarise.inform=FALSE) # suppress warning in regards to regrouping
wrap <- function(data, bound = 90) {
((data + bound) %% (bound * 2)) - bound
}
# 실험 1 & 2
d1 <- read.csv('E1results.csv', header = T) %>%
mutate(error = ifelse(Lshape==Label,
probeAngle - angle1,
probeAngle - angle2),
# error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 100) %>%
select(subject, Label, error, absError)
head(d1)
tail(d1)
range(d1$error)
d2 <- read.csv('E2results.csv', header = T) %>%
mutate(error = ifelse(Lshape==Label,
probeAngle - angle1,
probeAngle - angle2),
# error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 200) %>%
select(subject, Label, error, absError)
# 실험 3
d3 <- read.csv('E3results.csv', header = T) %>%
mutate(error = ifelse(Loc1==Label, probeAngle - angle1,
ifelse(Loc2==Label, probeAngle - angle2,
probeAngle - angle3)),
# error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 300) %>%
filter(ISI == 1.6) %>%
select(subject, Label, error, absError)
# 실험 4
d4 <- read.csv('E4results.csv', header = T) %>%
mutate(error = ifelse(loc1==Label,
probeAngle - angle1,
probeAngle - angle2),
# error = wrap(error),
Label = factor(Label,
levels = c(1,2,3),
labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 400) %>%
filter(suffix == 5) %>%
select(subject, Label, error, absError)
d <- bind_rows(list(d1, d2, d3, d4))
hist(d$error)
range(d$error)
headTail(d)
write.csv(d, file = "convertedE1to4.csv", row.names = FALSE)
setwd("~/Dropbox/2017Experiment/speGoNogo/speVCS2/YinChen2024Memory/Results/")
pacman::p_load(tidyverse, psych, knitr, rstatix, ggpubr, Superpower)
options(dplyr.summarise.inform=FALSE) # suppress warning in regards to regrouping
wrap <- function(data, bound = 90) {
((data + bound) %% (bound * 2)) - bound
}
# 실험 1 & 2
d1 <- read.csv('E1results.csv', header = T) %>%
mutate(error = ifelse(Lshape==Label,
probeAngle - angle1,
probeAngle - angle2),
# error = wrap(error),
# Label = factor(Label,
#                levels = c(1,2,3),
#                labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 100) %>%
select(subject, Label, error, absError)
head(d1)
tail(d1)
range(d1$error)
d2 <- read.csv('E2results.csv', header = T) %>%
mutate(error = ifelse(Lshape==Label,
probeAngle - angle1,
probeAngle - angle2),
# error = wrap(error),
# Label = factor(Label,
#                levels = c(1,2,3),
#                labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 200) %>%
select(subject, Label, error, absError)
# 실험 3
d3 <- read.csv('E3results.csv', header = T) %>%
mutate(error = ifelse(Loc1==Label, probeAngle - angle1,
ifelse(Loc2==Label, probeAngle - angle2,
probeAngle - angle3)),
# error = wrap(error),
# Label = factor(Label,
#                levels = c(1,2,3),
#                labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 300) %>%
filter(ISI == 1.6) %>%
select(subject, Label, error, absError)
# 실험 4
d4 <- read.csv('E4results.csv', header = T) %>%
mutate(error = ifelse(loc1==Label,
probeAngle - angle1,
probeAngle - angle2),
# error = wrap(error),
# Label = factor(Label,
#                levels = c(1,2,3),
#                labels = c('Self', 'Friend', 'Stranger')),
absError = abs(error),
subject = subject + 400) %>%
filter(suffix == 5) %>%
select(subject, Label, error, absError)
d <- bind_rows(list(d1, d2, d3, d4))
write.csv(d, file = "convertedE1to4.csv", row.names = FALSE)
?anova_test
(2.25+2.8)/2
(9.54+10.78)/2
